name: CI

on:
  # push:
  #   branches: ["main"]
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: '0 4 * * MON'
    # - cron: '0 4 * * *'

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: Build and Test
    # timeout-minutes: 15
    runs-on: ubuntu-20.04

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/devel/docs.requirements.txt

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

      - name: Test
        run: |
          export CI=true
          # TEST_EP_OPEN_API_NODE
          export TEST_EP_OPEN_API_NODE_SOLACE_CLOUD_TOKEN="${{ secrets.TEST_SOLACE_CLOUD_TOKEN }}"
          # TEST_EP_APIM_OPEN_API_NODE
          export TEST_EP_APIM_OPEN_API_NODE_SOLACE_CLOUD_TOKEN=="${{ secrets.TEST_SOLACE_CLOUD_TOKEN }}"
          # TEST_SEMPV2_CONFIG_OPEN_API_NODE
          export TEST_SEMPV2_CONFIG_OPEN_API_NODE_SOLACE_CLOUD_TOKEN="${{ secrets.TEST_SOLACE_CLOUD_TOKEN }}"
          export TEST_SEMPV2_CONFIG_OPEN_API_NODE_HOST="${{ secrets.TEST_SEMPV2_HOST }}"
          export TEST_SEMPV2_CONFIG_OPEN_API_NODE_MSG_VPN_NAME="${{ secrets.TEST_SEMPV2_MSG_VPN_NAME }}"
          export TEST_SEMPV2_CONFIG_OPEN_API_NODE_PASSWORD="${{ secrets.TEST_SEMPV2_PASSWORD }}"
          export TEST_SEMPV2_CONFIG_OPEN_API_NODE_USERNAME="${{ secrets.TEST_SEMPV2_USERNAME }}"
          # TEST_EP_SDK
          export TEST_EP_SDK_SOLACE_CLOUD_TOKEN="${{ secrets.TEST_SOLACE_CLOUD_TOKEN }}"
          # TEST_EP_ASYNC_API_IMPORTER
          export TEST_EP_ASYNC_API_IMPORTER_SOLACE_CLOUD_TOKEN="${{ secrets.TEST_SOLACE_CLOUD_TOKEN }}"
          yarn test
